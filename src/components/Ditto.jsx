/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Ditto/output/anim.gltf -o src/components/Ditto.jsx -r public 
*/

import React, { useRef,useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Ditto(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Ditto/output/anim.gltf')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
   actions["animation_0"].reset().fadeIn(0.5).play();
   return () => actions["animations_0"].fadeOut(0.5).play();
  },[]);
  // const { camera, mouse } = useThree();

  const handleClick = () => {
    // Play sound when model is clicked
    // const listener = new THREE.AudioListener();
    // camera.add(listener);
    // const sound = new THREE.Audio(listener);
    // const audioLoader = new THREE.AudioLoader();
    // audioLoader.load('/path/to/sound.mp3', (buffer) => {
    //   sound.setBuffer(buffer);
    //   sound.setLoop(false);
    //   sound.setVolume(0.5);
    //   sound.play();
    // });
  };
  return (
    <group ref={group} {...props} dispose={null} onClick={handleClick}>
      <group>
        <group name="Y_UP">
          <group name="Metamon" rotation={[-Math.PI, 0, -Math.PI]} scale={[-1, 1, 1]}>
            <group name="Origin">
              <primitive object={nodes.Waist} />
            </group>
          </group>
          <skinnedMesh name="Object_0" geometry={nodes.Object_0.geometry} material={materials.Body} skeleton={nodes.Object_0.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Ditto/output/anim.gltf')
